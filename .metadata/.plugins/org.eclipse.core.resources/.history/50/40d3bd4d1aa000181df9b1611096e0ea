import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Set;

public class WordLadder {
	public int ladderLength(String start, String end, Set<String> set) {
		if(start !=null && end !=null) {
			int counter=2;
			boolean flag=false;
			Queue<String> queue=new PriorityQueue<String>();
			ArrayList<String> lst=new ArrayList<String>();
			queue.add(start);
			lst.add(start);
			while(!queue.isEmpty()) {
				String str=queue.poll();
				if(isTransformable(str,end)) {
					return counter;
				}
				counter++;
				for(String s : set) {
					if(isTransformable(str,s)) {
						if(!lst.contains(s)) {
							lst.add(s);
							queue.add(s);
							flag=true;
						}
					}
				}
				
				if(!flag) {
					return 0;
				}
				
				flag=false;
			}
			return counter;
		}
		return 0;
	}

	private boolean isTransformable(String start, String end) {
		// TODO Auto-generated method stub
		int counter=0;
		int length=start.length();
		for(int i=0; i<length; i++) {
			if(start.charAt(i) != end.charAt(i)) {
				counter++;
			}
		}
		if(counter>=2) {
			return false;
		}else {
			return true;
		}
	}
}
